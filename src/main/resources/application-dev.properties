#######################
#POSTGRESQL properties
#docker command to run postgres:
#docker run --name dburger -e POSTGRES_USER=admin -e POSTGRES_PASSWORD=admin123 -e POSTGRES_DB=dburger -p 5444:5432 -d postgres
#######################
spring.datasource.url=jdbc:postgresql://localhost:5444/dburger?useSSL=false&characterEncoding=UTF-8
spring.datasource.username=admin
spring.datasource.password=admin123

#look closer (increment value is set to 50 by hibernate, so custom sequence also need that value
#hibernate.id.new_generator_mappings=true

# Show or not log for each sql query
spring.jpa.show-sql=true

#org.hibernate.SQL   - set to debug to log all SQL DML statements as they are executed
log4j.logger.org.hibernate.SQL=debug
#org.hibernate.type - set to trace to log all JDBC parameters
log4j.logger.org.hibernate.type=trace

# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL82Dialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.datasource.initialization-mode=always

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
#spring.queries.users-query=select email, password, active from appuser where email=?
#spring.queries.roles-query=select u.email, r.role from appuser u inner join appuser_role ar on(u.id=ar.appuser_id) inner join role r on(ar.role_id=r.id) where u.email=?

#######################
#APPLICATION properites
#######################
server.port=8888